# This is for exclusively Roblox functionality.
# Valid: CFrame.new(), Instance.new(), task.spawn()
# Invalid (put in selene-lib/default_std/luau.yml instead): math.sign(), bit32.countlz()
---
base: luau
name: roblox
globals:
  Axes.new:
    args:
      - type: "..."
    must_use: true
  BrickColor.Black:
    args: []
    must_use: true
  BrickColor.Blue:
    args: []
    must_use: true
  BrickColor.DarkGray:
    args: []
    must_use: true
  BrickColor.Gray:
    args: []
    must_use: true
  BrickColor.Green:
    args: []
    must_use: true
  BrickColor.Red:
    args: []
    must_use: true
  BrickColor.White:
    args: []
    must_use: true
  BrickColor.Yellow:
    args: []
    must_use: true
  BrickColor.new:
    args:
      - type: any
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  BrickColor.palette:
    args:
      - type: number
    must_use: true
  BrickColor.random:
    args: []
    must_use: true
  CatalogSearchParams.new:
    args: []
    must_use: true
  CFrame.Angles:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  CFrame.fromAxisAngle:
    args:
      - type:
          display: Vector3
      - type: number
    must_use: true
  CFrame.fromEulerAngles:
    args:
      - type: number
      - type: number
      - type: number
      - required: false
        type:
          display: RotationOrder
    must_use: true
  CFrame.fromEulerAnglesXYZ:
    args:
      - type: number
      - type: number
      - type: number
    must_use: true
  CFrame.fromEulerAnglesYXZ:
    args:
      - type: number
      - type: number
      - type: number
    must_use: true
  CFrame.fromMatrix:
    args:
      - type:
          display: Vector3
      - type:
          display: Vector3
      - type:
          display: Vector3
      - required: false
        type:
          display: Vector3
    must_use: true
  CFrame.fromOrientation:
    args:
      - type: number
      - type: number
      - type: number
    must_use: true
  CFrame.fromRotationBetweenVectors:
    args:
      - type:
          display: Vector3
      - type:
          display: Vector3
    must_use: true
  CFrame.identity:
    property: read-only
  CFrame.lookAlong:
    args:
      - type:
          display: Vector3
      - type:
          display: Vector3
      - required: false
        type:
          display: Vector3
    must_use: true
  CFrame.lookAt:
    args:
      - type:
          display: Vector3
      - type:
          display: Vector3
      - required: false
        type:
          display: Vector3
    must_use: true
  CFrame.new:
    args:
      - required: false
        type: any
      - required: false
        type: any
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  Color3.fromHSV:
    args:
      - type: number
      - type: number
      - type: number
    must_use: true
  Color3.fromHex:
    args:
      - type: string
    must_use: true
  Color3.fromRGB:
    args:
      - type: number
      - type: number
      - type: number
    must_use: true
  Color3.new:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  Color3.toHSV:
    args:
      - type:
          display: Color3
    must_use: true
  ColorSequence.new:
    args:
      - type: any
      - required: false
        type:
          display: Color3
    must_use: true
  ColorSequenceKeypoint.new:
    args:
      - type: number
      - type:
          display: Color3
    must_use: true
  DateTime.fromIsoDate:
    args:
      - type: string
    must_use: true
  DateTime.fromLocalTime:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  DateTime.fromUniversalTime:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  DateTime.fromUnixTimestamp:
    args:
      - type: number
    must_use: true
  DateTime.fromUnixTimestampMillis:
    args:
      - type: number
    must_use: true
  DateTime.now:
    args: []
    must_use: true
  DebuggerManager:
    args: []
    must_use: true
  DockWidgetPluginGuiInfo.new:
    args:
      - required: false
        type:
          display: InitialDockState
      - required: false
        type: bool
      - required: false
        type: bool
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  Enum.GetEnums:
    args: []
    method: true
    must_use: true
  Faces.new:
    args:
      - type: "..."
    must_use: true
  Font.fromEnum:
    args:
      - type:
          display: Font
    must_use: true
  Font.fromName:
    args:
      - type: string
      - required: false
        type:
          display: FontWeight
      - required: false
        type:
          display: FontStyle
    must_use: true
  Font.fromId:
    args:
      - type: number
      - required: false
        type:
          display: FontWeight
      - required: false
        type:
          display: FontStyle
    must_use: true
  Font.new:
    args:
      - type: string
      - required: false
        type:
          display: FontWeight
      - required: false
        type:
          display: FontStyle
    must_use: true
  FloatCurveKey.new:
    args:
      - type: number
      - type: number
      - type:
          display: KeyInterpolationMode
    must_use: true
  Instance.new:
    args:
      - type: string
      - required: false
        type:
          display: Instance
        deprecated:
          message: set the instance's parent separately
    # This is only must_use because we don't allow the second parameter
    must_use: true
  Instance.fromExisting:
    args:
      - type:
          display: Instance
    must_use: true
  NumberRange.new:
    args:
      - type: number
      - required: false
        type: number
    must_use: true
  NumberSequence.new:
    args:
      - type: any
      - required: false
        type: number
    must_use: true
  NumberSequenceKeypoint.new:
    args:
      - type: number
      - type: number
      - required: false
        type: number
    must_use: true
  OverlapParams.new:
    args: []
    must_use: true
  Path2DControlPoint.new:
    args:
      - required: false
        type:
          display: UDim2
      - required: false
        type:
          display: UDim2
      - required: false
        type:
          display: UDim2
    must_use: true
  PathWaypoint.new:
    args:
      - required: false
        type:
          display: Vector3
      - required: false
        type:
          display: PathWaypointAction
      - required: false
        type: string
    must_use: true
  PhysicalProperties.new:
    args:
      - type: any
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  Random.new:
    args:
      - required: false
        type: number
    must_use: true
  Ray.new:
    args:
      - type:
          display: Vector3
      - type:
          display: Vector3
    must_use: true
  RaycastParams.new:
    args: []
    must_use: true
  Rect.new:
    args:
      - type: any
      - type: any
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  Region3.new:
    args:
      - type:
          display: Vector3
      - type:
          display: Vector3
    must_use: true
  Region3int16.new:
    args:
      - required: false
        type:
          display: Vector3
      - required: false
        type:
          display: Vector3
    must_use: true
  RotationCurveKey.new:
    args:
      - type: number
      - type:
          display: CFrame
      - type:
          display: KeyInterpolationMode
    must_use: true
  TweenInfo.new:
    args:
      - required: false
        type: number
      - required: false
        type:
          display: EasingStyle
      - required: false
        type:
          display: EasingDirection
      - required: false
        type: number
      - required: false
        type: bool
      - required: false
        type: number
    must_use: true
  UDim.new:
    args:
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  UDim2.fromOffset:
    args:
      - required: use UDim2.new() if you want an empty UDim2
        type: number
      - required: false
        type: number
    must_use: true
  UDim2.fromScale:
    args:
      - required: use UDim2.new() if you want an empty UDim2
        type: number
      - required: false
        type: number
    must_use: true
  UDim2.new:
    args:
      - required: false
        type: any
      - required: false
        type: any
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  UserSettings:
    args: []
    must_use: true
  Vector2.new:
    args:
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  Vector2.one:
    property: read-only
  Vector2.xAxis:
    property: read-only
  Vector2.yAxis:
    property: read-only
  Vector2.zero:
    property: read-only
  Vector2int16.new:
    args:
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  Vector3.FromAxis:
    args:
      - type:
          display: Axis
    must_use: true
  Vector3.FromNormalId:
    args:
      - type:
          display: NormalId
    must_use: true
  Vector3.new:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  Vector3.one:
    property: read-only
  Vector3.xAxis:
    property: read-only
  Vector3.yAxis:
    property: read-only
  Vector3.zAxis:
    property: read-only
  Vector3.zero:
    property: read-only
  Vector3int16.new:
    args:
      - required: false
        type: number
      - required: false
        type: number
      - required: false
        type: number
  debug.profilebegin:
    args:
      - type: string
  debug.profileend:
    args: []
  debug.resetmemorycategory:
    args: []
  debug.setmemorycategory:
    args:
      - type: string
  delay:
    args:
      - type: number
      - type: function
  elapsedTime:
    args: []
  require:
    args:
      - type: number
  SharedTable.clear:
    args:
      - type:
          display: SharedTable
  SharedTable.clone:
    args:
      - type:
          display: SharedTable
      - required: false
        type: bool
    must_use: true
  SharedTable.cloneAndFreeze:
    args:
      - type:
          display: SharedTable
      - required: false
        type: bool
    must_use: true
  SharedTable.increment:
    args:
      - type:
          display: SharedTable
      - type: any
      - type: number
  SharedTable.isFrozen:
    args:
      - type:
          display: SharedTable
    must_use: true
  SharedTable.new:
    args:
      - required: false
        type: table
    must_use: true
  SharedTable.size:
    args:
      - type:
          display: SharedTable
    must_use: true
  SharedTable.update:
    args:
      - type:
          display: SharedTable
      - type: any
      - type: function
  settings:
    args: []
  shared:
    property: new-fields
  spawn:
    args:
      - type: function
  task.cancel:
    args:
      - type:
          display: thread
  task.defer:
    args:
      - type: function
      - required: false
        type: "..."
  task.delay:
    args:
      - required: false
        type: number
      - type: function
      - required: false
        type: "..."
  task.desynchronize:
    args: []
  task.spawn:
    args:
      - type: function
      - required: false
        type: "..."
  task.synchronize:
    args: []
  task.wait:
    args:
      - required: false
        type: number
  tick:
    args: []
  time:
    args: []
  utf8.graphemes:
    args:
      - type: string
      - required: false
        type: number
      - required: false
        type: number
    must_use: true
  utf8.nfcnormalize:
    args:
      - type: string
    must_use: true
  utf8.nfdnormalize:
    args:
      - type: string
    must_use: true
  wait:
    args:
      - required: false
        type: number
  warn:
    args:
      - type: any
      - required: false
        type: "..."
  Content.fromObject:
    args:
      - required: true
        type:
            display: Object
    must_use: true
  Content.fromUri:
    args:
      - required: true
        type: string
    must_use: true
  Content.fromAssetId:
    args:
      - required: true
        type: number
  Content.none:
    property: read-only
structs:
  EnumItem:
    Name:
      property: read-only
    Value:
      property: read-only
  Event:
    Connect:
      args:
        - type: function
      method: true
    connect:
      deprecated:
        message: "lowercase methods have been superseded by uppercase ones"
        replace:
          - "Connect(%1)"
      args:
        - type: function
      method: true
    Once:
      args:
        - type: function
      method: true
    Wait:
      args: []
      method: true
    wait:
      deprecated:
        message: "lowercase methods have been superseded by uppercase ones"
        replace:
          - "Wait(%1)"
      args:
        - type: function
      method: true
  Instance:
    "*":
      any: true
